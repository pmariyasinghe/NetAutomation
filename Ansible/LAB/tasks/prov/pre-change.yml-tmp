---
#### COMMAND: ansible-playbook tasks/prov/pre-change.yml -u root --ask-pass

- name: Create target HOSTNAME dir on the LOCAL host if doesnt exist
  hosts: localhost
  tasks:
  - file: path=/vagrant/NetAutomation/Ansible/LAB/ConfigRepos/{{hostvars[item]['dev_os']}}/{{hostvars[item]['hostname']}} state=directory  mode=0755
    with_items: "{{ groups['veos-lab'] }}"

- name: Generate configuration files for Arista LAB
  hosts: localhost
  tasks:
  - template: src=/vagrant/NetAutomation/Ansible/LAB/templates/{{hostvars[item]['dev_os']}}/base.j2 dest=/vagrant/NetAutomation/Ansible/LAB/ConfigRepos/{{hostvars[item]['hostname']}}/{{hostvars[item]['hostname']}}.conf
    with_items: "{{ groups['veos-lab'] }}"

- name: Checks and create target MAC dir on the REMOTE host
  hosts: [remote-servers] 
  tasks:
  - block:
    - name: Checks existance of target MAC dir on the REMOTE host
      stat: path="/var/lib/tftpboot/lab/{{hostvars[item]['system_mac_address']}}"
      register: "dir_status"
      with_items: "{{ groups['veos-lab'] }}"
#    - debug: var=dir_status
#    - debug: msg="item.item={{item.item}}, item.changed={{item.changed}}"
#      with_items: "{{dir_status.results}}"
    - name: Creates target MAC dir on the REMOTE host if it doesn't
      file: dest="{{item.invocation.module_args.path}}" state=directory owner=root group=root mode=0755
      become: False
      become_user: root
      become_method: su
      when: item.stat.exists == False
      with_items: "{{dir_status.results}}"

#- name: Create target MAC dir on the REMOTE host if doesnt exist
#  hosts: servers
#  tasks:
#  - file: path=/var/lib/tftpboot/lab/{{hostvars[item]['system_mac_address']}} state=directory owner=root group=root mode=0755 
#    become: True
#    become_user: root
#    become_method: sudo
#    with_items: "{{ groups['veos-lab'] }}"
#  - debug:
#      msg: "{{hostvars[item]['system_mac_address']}}"
#    with_items: "{{ groups['veos-lab'] }}"

#- name: Copying TFTP startup configuration
#  hosts: servers
#  tasks:
#  - script: /usr/bin/python /vagrant/NetAutomation/Ansible/LAB/scripts/scpcopy_put.py {{username}} {{hostname}} {{ansible_ssh_pass}} /vagrant/NetAutomation/Ansible/LAB/ConfigRepos/{{hostvars[item]['dev_os']}}/{{hostvars[item]['hostname']}}/{{hostvars[item]['hostname']}}.conf /var/lib/tftpboot/lab/{{hostvars[item]['system_mac_address']}}/{{hostvars[item]['hostname']}}.conf
#    with_items: "{{ groups['veos-lab'] }}"

#- name: Generate DHCP config for the switch being provisoned.
#  template: src=~/ansible/roles/LAB/HPN/templates/dhcpd.j2 dest=~/ansible/CFG/HPN/REPOS/LAB/dhcpd-arista.conf
#  with_items: LAB_SWITCHES

#- name: Sync DHCP conf to remote host
#  script: /usr/bin/python ~/ansible/roles/LAB/HPN/scripts/scpcopy_put.py {{ansible_user}} centos7.lab.ecmwf.int {{ansible_ssh_pass}} ~/ansible/CFG/HPN/REPOS/LAB/dhcpd-arista.conf /etc/dhcp/lab/dhcpd-arista.conf

#- name: Restart DHCP Server
#  command: ssh root@centos7.lab.ecmwf.int -i /home/ADSERV/ansible/.ssh/id_centos7_lab -C 'service dhcpd restart'

